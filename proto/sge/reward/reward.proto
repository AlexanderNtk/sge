syntax = "proto3";
package sgenetwork.sge.reward;

import "gogoproto/gogo.proto";

option go_package = "github.com/sge-network/sge/x/reward/types";

// Reward is the transaction made to reward a user
// for a specific action.
message Reward {

  // uid is the unique identifier for a reward.
  string uid = 1 [
    (gogoproto.customname) = "UID",
    (gogoproto.jsontag) = "uid",
    json_name = "uid"
  ];

  // creator is the address of the account that invokes the reward transaction.
  string creator = 2;

  // receiver is the address of the account that receives the reward.
  string receiver = 3;

  // campaign_uid is the unique identifier of the campaign.
  string campaign_uid = 4 [
    (gogoproto.customname) = "CampaignUID",
    (gogoproto.jsontag) = "campaign_uid",
    json_name = "campaign_uid"
  ];

  // reward_type is the type of the reward.
  RewardType reward_type = 5 [
    (gogoproto.customname) = "RewardType",
    (gogoproto.jsontag) = "reward_type",
    json_name = "reward_type"
  ];

  RewardCategory reward_category = 6 [
    (gogoproto.customname) = "RewardCategory",
    (gogoproto.jsontag) = "reward_category",
    json_name = "reward_category"
  ];

  // reward_amount is the amount of the reward.
  RewardAmount reward_amount = 7 [
    (gogoproto.customname) = "RewardAmount",
    (gogoproto.jsontag) = "reward_amount",
    json_name = "reward_amount"
  ];

  // source is the source of the reward.
  // It is used to identify the source of the reward.
  // For example, the source of a referral signup is Type - referral.
  string source = 8 [
    (gogoproto.customname) = "Source",
    (gogoproto.jsontag) = "source",
    json_name = "source"
  ];

  // source_code is the source code of the reward.
  // It is used to identify the source of the reward.
  // For example, the source code of a referral signup is referral code of
  // referer.
  string source_code = 9 [
    (gogoproto.customname) = "SourceCode",
    (gogoproto.jsontag) = "source_code",
    json_name = "source_code"
  ];

  // source_uid is the address of the source.
  // It is used to identify the source of the reward.
  // For example, the source uid of a referral signup reward is the address of
  // the referer.
  string source_uid = 10 [
    (gogoproto.customname) = "SourceUID",
    (gogoproto.jsontag) = "source_uid",
    json_name = "source_uid"
  ];

  // created_at is the time when the reward is created.
  uint64 created_at = 11 [
    (gogoproto.customname) = "CreatedAt",
    (gogoproto.jsontag) = "created_at",
    json_name = "created_at"
  ];
}

message RewardAmount {
  // main account reward amount
  string main_account_amount = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"main_account_amount\""
  ];

  // sub account reward amount
  string subaccount_amount = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"subaccount_amount\""
  ];

  // unlock timestamp
  uint64 unlock_ts = 3 [
    (gogoproto.customname) = "UnlockTS",
    (gogoproto.jsontag) = "unlock_ts",
    json_name = "unlock_ts"
  ];
}

// RewardType defines supported types of rewards of reward module.
enum RewardCategory {
  // the invalid or unknown
  REWARD_CATEGORY_UNSPECIFIED = 0;

  // signup reward
  REWARD_CATEGORY_SIGNUP = 1;

  // referral reward
  REWARD_CATEGORY_REFERRAL = 2;

  // affiliate reward
  REWARD_CATEGORY_AFFILIATE = 3;

  // bet refunds
  REWARD_CATEGORY_BET_REFUND = 4;

  // milestone reward
  REWARD_CATEGORY_MILESTONE = 5;

  // bet discounts
  REWARD_CATEGORY_BET_DISCOUNT = 6;

  // other rewards
  REWARD_CATEGORY_OTHER = 7;
}

// RewardType defines supported types of rewards of reward module.
enum RewardType {
  // the invalid or unknown
  REWARD_TYPE_UNSPECIFIED = 0;

  // signup reward
  REWARD_TYPE_SIGNUP = 1;

  // referral signup reward
  REWARD_TYPE_REFERRAL_SIGNUP = 2;

  // affiliate signup reward
  REWARD_TYPE_AFFILIATE_SIGNUP = 3;

  // referral reward
  REWARD_TYPE_REFERRAL = 4;

  // affiliate reward
  REWARD_TYPE_AFFILIATE = 5;

  // bet refunds
  REWARD_TYPE_BET_REFUND = 6;

  // milestone reward
  REWARD_TYPE_MILESTONE = 7;

  // bet discounts
  REWARD_TYPE_BET_DISCOUNT = 8;

  // other rewards
  REWARD_TYPE_OTHER = 9;
}

// RewardType defines supported types of rewards of reward module.
enum RewardAmountType {
  // the invalid or unknown
  REWARD_AMOUNT_TYPE_UNSPECIFIED = 0;

  // Fixed amount
  REWARD_AMOUNT_TYPE_FIXED = 1;

  // Business logic defined amount
  REWARD_AMOUNT_TYPE_LOGIC = 2;

  // Percentage of bet amount
  REWARD_AMOUNT_TYPE_PERCENTAGE = 3;
}
