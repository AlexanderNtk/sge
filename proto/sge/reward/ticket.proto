syntax = "proto3";
package sgenetwork.sge.reward;

import "gogoproto/gogo.proto";
import "sge/reward/reward.proto";
import "sge/reward/campaign.proto";

option go_package = "github.com/sge-network/sge/x/reward/types";

// CreateCampaignPayload is the type for campaign creation payload.
message CreateCampaignPayload {
  // promoter is the address of campaign promoter.
  // Funds for the campaign would be deducted from this account.
  string promoter = 1;

  // start_ts is the start timestamp of the campaign.
  uint64 start_ts = 2;

  // end_ts is the end timestamp of the campaign.
  uint64 end_ts = 3;

  // reward_type is the type of reward.
  RewardType reward_type = 4;

  // Reward amount
  RewardAmountType reward_amount_type = 7;

  // reward_amount is the amount of reward.
  RewardAmount reward_amount = 8;

  // pool is the tracker of pool funds of the campaign.
  Pool pool = 9 [ (gogoproto.nullable) = false ];

  // validations required on the campaign reward distribution.
  // It is a stringified base64 encoded json.
  string validations = 10;

  // meta is the metadata of the campaign.
  // It is a stringified base64 encoded json.
  string meta = 11;
}

// UpdateCampaignPayload is the type for campaign update payload.
message UpdateCampaignPayload {

  // end_ts is the end timestamp of the campaign.
  uint64 end_ts = 3;

  // funds is the additional amount added to the campaign.
  string funds = 4;
}