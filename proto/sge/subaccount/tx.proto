syntax = "proto3";
package sgenetwork.sge.subaccount;

import "sge/subaccount/subaccount.proto";

option go_package = "github.com/sge-network/sge/x/subaccount/types";

// Msg defines the Msg service.
service Msg {
  // CreateSubAccount defines a method for creating a subaccount.
  rpc CreateSubAccount(MsgCreateSubAccount) returns (MsgCreateSubAccountResponse);

  // TopUp defines a method for topping up a subaccount.
  rpc TopUp(MsgTopUp) returns (MsgTopUpResponse);

  rpc WithdrawUnlockedBalances(MsgWithdrawUnlockedBalances) returns (MsgWithdrawUnlockedBalancesResponse);
}

// MsgCreateSubAccount defines the Msg/CreateSubAccount request type.
message MsgCreateSubAccount {
  // sender is the msg signer.
  string sender = 1;

  // sub_account_owner is the owner of the subaccount.
  string sub_account_owner = 2;

  // locked_balances is the list of balance locks.
  repeated LockedBalance locked_balances = 3;
}

// MsgCreateAccountResponse defines the Msg/CreateAccount response type.
message MsgCreateSubAccountResponse {}

// MsgTopUp defines the Msg/TopUp request type.
message MsgTopUp {
  // sender is the msg signer.
  string sender = 1;

  // sub_account is the subaccount address.
  string sub_account = 2;

  // locked_balances is the list of balance locks.
  repeated LockedBalance locked_balances = 3;
}

// MsgTopUpResponse defines the Msg/TopUp response type.
message MsgTopUpResponse {}

// MsgWithdrawUnlockedBalances defines the Msg/WithdrawUnlockedBalances request type.
message MsgWithdrawUnlockedBalances {
  // sender is the subaccount owner.
  string sender = 1;
}

// MsgWithdrawUnlockedBalancesResponse defines the Msg/WithdrawUnlockedBalances response type.
message MsgWithdrawUnlockedBalancesResponse {}