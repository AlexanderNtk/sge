// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sge/reward/ticket.proto

package types

import (
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/sge-network/sge/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// CreateCampaignPayload is the type for campaign creation payload.
type CreateCampaignPayload struct {
	FunderAddress string                `protobuf:"bytes,1,opt,name=funder_address,json=funderAddress,proto3" json:"funder_address,omitempty"`
	StartTs       uint64                `protobuf:"varint,2,opt,name=start_ts,json=startTs,proto3" json:"start_ts,omitempty"`
	EndTs         uint64                `protobuf:"varint,3,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
	Type          RewardType            `protobuf:"varint,4,opt,name=type,proto3,enum=sgenetwork.sge.reward.RewardType" json:"type,omitempty"`
	RewardDefs    []Definition          `protobuf:"bytes,6,rep,name=reward_defs,json=rewardDefs,proto3" json:"reward_defs"`
	PoolAmount    cosmossdk_io_math.Int `protobuf:"bytes,7,opt,name=pool_amount,json=poolAmount,proto3,customtype=cosmossdk.io/math.Int" json:"pool_amount" yaml:"pool_amount"`
}

func (m *CreateCampaignPayload) Reset()         { *m = CreateCampaignPayload{} }
func (m *CreateCampaignPayload) String() string { return proto.CompactTextString(m) }
func (*CreateCampaignPayload) ProtoMessage()    {}
func (*CreateCampaignPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d710bc1249ca8ae, []int{0}
}
func (m *CreateCampaignPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateCampaignPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateCampaignPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateCampaignPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCampaignPayload.Merge(m, src)
}
func (m *CreateCampaignPayload) XXX_Size() int {
	return m.Size()
}
func (m *CreateCampaignPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCampaignPayload.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCampaignPayload proto.InternalMessageInfo

func (m *CreateCampaignPayload) GetFunderAddress() string {
	if m != nil {
		return m.FunderAddress
	}
	return ""
}

func (m *CreateCampaignPayload) GetStartTs() uint64 {
	if m != nil {
		return m.StartTs
	}
	return 0
}

func (m *CreateCampaignPayload) GetEndTs() uint64 {
	if m != nil {
		return m.EndTs
	}
	return 0
}

func (m *CreateCampaignPayload) GetType() RewardType {
	if m != nil {
		return m.Type
	}
	return RewardType_REWARD_TYPE_UNSPECIFIED
}

func (m *CreateCampaignPayload) GetRewardDefs() []Definition {
	if m != nil {
		return m.RewardDefs
	}
	return nil
}

// UpdateCampaignPayload is the type for campaign update payload.
type UpdateCampaignPayload struct {
	EndTs uint64 `protobuf:"varint,1,opt,name=end_ts,json=endTs,proto3" json:"end_ts,omitempty"`
}

func (m *UpdateCampaignPayload) Reset()         { *m = UpdateCampaignPayload{} }
func (m *UpdateCampaignPayload) String() string { return proto.CompactTextString(m) }
func (*UpdateCampaignPayload) ProtoMessage()    {}
func (*UpdateCampaignPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d710bc1249ca8ae, []int{1}
}
func (m *UpdateCampaignPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateCampaignPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateCampaignPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateCampaignPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCampaignPayload.Merge(m, src)
}
func (m *UpdateCampaignPayload) XXX_Size() int {
	return m.Size()
}
func (m *UpdateCampaignPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCampaignPayload.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCampaignPayload proto.InternalMessageInfo

func (m *UpdateCampaignPayload) GetEndTs() uint64 {
	if m != nil {
		return m.EndTs
	}
	return 0
}

// ApplySignupRewardPayload is the signup reward ticket payload type.
type ApplySignupRewardPayload struct {
	KycData  types.KycDataPayload `protobuf:"bytes,1,opt,name=kyc_data,json=kycData,proto3" json:"kyc_data"`
	Receiver Receiver             `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver"`
}

func (m *ApplySignupRewardPayload) Reset()         { *m = ApplySignupRewardPayload{} }
func (m *ApplySignupRewardPayload) String() string { return proto.CompactTextString(m) }
func (*ApplySignupRewardPayload) ProtoMessage()    {}
func (*ApplySignupRewardPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d710bc1249ca8ae, []int{2}
}
func (m *ApplySignupRewardPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplySignupRewardPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplySignupRewardPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplySignupRewardPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplySignupRewardPayload.Merge(m, src)
}
func (m *ApplySignupRewardPayload) XXX_Size() int {
	return m.Size()
}
func (m *ApplySignupRewardPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplySignupRewardPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ApplySignupRewardPayload proto.InternalMessageInfo

func (m *ApplySignupRewardPayload) GetKycData() types.KycDataPayload {
	if m != nil {
		return m.KycData
	}
	return types.KycDataPayload{}
}

func (m *ApplySignupRewardPayload) GetReceiver() Receiver {
	if m != nil {
		return m.Receiver
	}
	return Receiver{}
}

// ApplyRerferralRewardPayload is the referral reward ticket payload type.
type ApplyRerferralRewardPayload struct {
	KycData   types.KycDataPayload `protobuf:"bytes,1,opt,name=kyc_data,json=kycData,proto3" json:"kyc_data"`
	Receivers []Receiver           `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers"`
}

func (m *ApplyRerferralRewardPayload) Reset()         { *m = ApplyRerferralRewardPayload{} }
func (m *ApplyRerferralRewardPayload) String() string { return proto.CompactTextString(m) }
func (*ApplyRerferralRewardPayload) ProtoMessage()    {}
func (*ApplyRerferralRewardPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d710bc1249ca8ae, []int{3}
}
func (m *ApplyRerferralRewardPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyRerferralRewardPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyRerferralRewardPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyRerferralRewardPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyRerferralRewardPayload.Merge(m, src)
}
func (m *ApplyRerferralRewardPayload) XXX_Size() int {
	return m.Size()
}
func (m *ApplyRerferralRewardPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyRerferralRewardPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyRerferralRewardPayload proto.InternalMessageInfo

func (m *ApplyRerferralRewardPayload) GetKycData() types.KycDataPayload {
	if m != nil {
		return m.KycData
	}
	return types.KycDataPayload{}
}

func (m *ApplyRerferralRewardPayload) GetReceivers() []Receiver {
	if m != nil {
		return m.Receivers
	}
	return nil
}

// ApplyAffiliationRewardPayload is the affiliation reward ticket payload type.
type ApplyAffiliationRewardPayload struct {
	KycData  types.KycDataPayload `protobuf:"bytes,1,opt,name=kyc_data,json=kycData,proto3" json:"kyc_data"`
	Receiver Receiver             `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver"`
}

func (m *ApplyAffiliationRewardPayload) Reset()         { *m = ApplyAffiliationRewardPayload{} }
func (m *ApplyAffiliationRewardPayload) String() string { return proto.CompactTextString(m) }
func (*ApplyAffiliationRewardPayload) ProtoMessage()    {}
func (*ApplyAffiliationRewardPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d710bc1249ca8ae, []int{4}
}
func (m *ApplyAffiliationRewardPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyAffiliationRewardPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyAffiliationRewardPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyAffiliationRewardPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyAffiliationRewardPayload.Merge(m, src)
}
func (m *ApplyAffiliationRewardPayload) XXX_Size() int {
	return m.Size()
}
func (m *ApplyAffiliationRewardPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyAffiliationRewardPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyAffiliationRewardPayload proto.InternalMessageInfo

func (m *ApplyAffiliationRewardPayload) GetKycData() types.KycDataPayload {
	if m != nil {
		return m.KycData
	}
	return types.KycDataPayload{}
}

func (m *ApplyAffiliationRewardPayload) GetReceiver() Receiver {
	if m != nil {
		return m.Receiver
	}
	return Receiver{}
}

// ApplyNoLossBetsRewardPayload is the noloss bets reward ticket payload type.
type ApplyNoLossBetsRewardPayload struct {
	KycData  types.KycDataPayload `protobuf:"bytes,1,opt,name=kyc_data,json=kycData,proto3" json:"kyc_data"`
	Receiver Receiver             `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver"`
	BetUids  []string             `protobuf:"bytes,3,rep,name=bet_uids,json=betUids,proto3" json:"bet_uids,omitempty"`
}

func (m *ApplyNoLossBetsRewardPayload) Reset()         { *m = ApplyNoLossBetsRewardPayload{} }
func (m *ApplyNoLossBetsRewardPayload) String() string { return proto.CompactTextString(m) }
func (*ApplyNoLossBetsRewardPayload) ProtoMessage()    {}
func (*ApplyNoLossBetsRewardPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_5d710bc1249ca8ae, []int{5}
}
func (m *ApplyNoLossBetsRewardPayload) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyNoLossBetsRewardPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyNoLossBetsRewardPayload.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyNoLossBetsRewardPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyNoLossBetsRewardPayload.Merge(m, src)
}
func (m *ApplyNoLossBetsRewardPayload) XXX_Size() int {
	return m.Size()
}
func (m *ApplyNoLossBetsRewardPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyNoLossBetsRewardPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyNoLossBetsRewardPayload proto.InternalMessageInfo

func (m *ApplyNoLossBetsRewardPayload) GetKycData() types.KycDataPayload {
	if m != nil {
		return m.KycData
	}
	return types.KycDataPayload{}
}

func (m *ApplyNoLossBetsRewardPayload) GetReceiver() Receiver {
	if m != nil {
		return m.Receiver
	}
	return Receiver{}
}

func (m *ApplyNoLossBetsRewardPayload) GetBetUids() []string {
	if m != nil {
		return m.BetUids
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateCampaignPayload)(nil), "sgenetwork.sge.reward.CreateCampaignPayload")
	proto.RegisterType((*UpdateCampaignPayload)(nil), "sgenetwork.sge.reward.UpdateCampaignPayload")
	proto.RegisterType((*ApplySignupRewardPayload)(nil), "sgenetwork.sge.reward.ApplySignupRewardPayload")
	proto.RegisterType((*ApplyRerferralRewardPayload)(nil), "sgenetwork.sge.reward.ApplyRerferralRewardPayload")
	proto.RegisterType((*ApplyAffiliationRewardPayload)(nil), "sgenetwork.sge.reward.ApplyAffiliationRewardPayload")
	proto.RegisterType((*ApplyNoLossBetsRewardPayload)(nil), "sgenetwork.sge.reward.ApplyNoLossBetsRewardPayload")
}

func init() { proto.RegisterFile("sge/reward/ticket.proto", fileDescriptor_5d710bc1249ca8ae) }

var fileDescriptor_5d710bc1249ca8ae = []byte{
	// 554 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0xcf, 0x6e, 0xd3, 0x30,
	0x1c, 0x6e, 0xd6, 0xb2, 0xae, 0xae, 0xd8, 0x21, 0xa2, 0x22, 0x0c, 0x48, 0x4b, 0x11, 0x52, 0x39,
	0x90, 0x48, 0x9d, 0xb8, 0x70, 0xeb, 0x9f, 0x03, 0x08, 0x84, 0x50, 0xe8, 0x2e, 0x5c, 0x22, 0x37,
	0xfe, 0x25, 0xb3, 0xf2, 0xc7, 0x91, 0xed, 0x32, 0xf2, 0x16, 0xbc, 0x03, 0x17, 0x9e, 0x83, 0x0b,
	0x3b, 0xee, 0x88, 0x38, 0x54, 0xa8, 0x7d, 0x03, 0x9e, 0x00, 0xd9, 0xee, 0xb6, 0x0a, 0x6d, 0x12,
	0x17, 0xa4, 0x9d, 0x62, 0xff, 0xbe, 0xef, 0xb3, 0xbf, 0xdf, 0xe7, 0xd8, 0xe8, 0xae, 0x48, 0xc0,
	0xe7, 0x70, 0x82, 0x39, 0xf1, 0x25, 0x8d, 0x52, 0x90, 0x5e, 0xc9, 0x99, 0x64, 0x76, 0x47, 0x24,
	0x50, 0x80, 0x3c, 0x61, 0x3c, 0xf5, 0x44, 0x02, 0x9e, 0xe1, 0x1c, 0xdc, 0x49, 0x58, 0xc2, 0x34,
	0xc3, 0x57, 0x23, 0x43, 0x3e, 0xd8, 0x5e, 0xc5, 0x7c, 0x36, 0x80, 0xad, 0x00, 0x59, 0x95, 0xe0,
	0xa7, 0x55, 0x64, 0x6a, 0xfd, 0xef, 0x3b, 0xa8, 0x33, 0xe1, 0x80, 0x25, 0x4c, 0x70, 0x5e, 0x62,
	0x9a, 0x14, 0xef, 0x70, 0x95, 0x31, 0x4c, 0xec, 0x27, 0x68, 0x3f, 0x5e, 0x14, 0x04, 0x78, 0x88,
	0x09, 0xe1, 0x20, 0x84, 0x63, 0xf5, 0xac, 0x41, 0x2b, 0xb8, 0x6d, 0xaa, 0x23, 0x53, 0xb4, 0xef,
	0xa1, 0x3d, 0x21, 0x31, 0x97, 0xa1, 0x14, 0xce, 0x4e, 0xcf, 0x1a, 0x34, 0x82, 0xa6, 0x9e, 0xcf,
	0x84, 0xdd, 0x41, 0xbb, 0x50, 0x10, 0x05, 0xd4, 0x35, 0x70, 0x0b, 0x0a, 0x32, 0x13, 0xf6, 0x73,
	0xd4, 0x50, 0x26, 0x9c, 0x46, 0xcf, 0x1a, 0xec, 0x0f, 0x1f, 0x79, 0x57, 0xf6, 0xe6, 0x05, 0xfa,
	0x33, 0xab, 0x4a, 0x08, 0x34, 0xdd, 0x7e, 0x89, 0xda, 0x06, 0x0a, 0x09, 0xc4, 0xc2, 0xd9, 0xed,
	0xd5, 0x07, 0xed, 0x6b, 0xd5, 0x53, 0x88, 0x69, 0x41, 0x25, 0x65, 0xc5, 0xb8, 0x71, 0xba, 0xec,
	0xd6, 0x02, 0x64, 0x80, 0x29, 0xc4, 0xc2, 0x9e, 0xa1, 0x76, 0xc9, 0x58, 0x16, 0xe2, 0x9c, 0x2d,
	0x0a, 0xe9, 0x34, 0x55, 0x5b, 0xe3, 0x43, 0x45, 0xfb, 0xb9, 0xec, 0x76, 0x22, 0x26, 0x72, 0x26,
	0x04, 0x49, 0x3d, 0xca, 0xfc, 0x1c, 0xcb, 0x63, 0xef, 0x55, 0x21, 0x7f, 0x2f, 0xbb, 0x76, 0x85,
	0xf3, 0xec, 0x45, 0x7f, 0x4b, 0xd9, 0x0f, 0x90, 0x9a, 0x8d, 0xcc, 0xc4, 0x43, 0x9d, 0xa3, 0x92,
	0x5c, 0x11, 0xe4, 0x65, 0x0c, 0xd6, 0x56, 0x0c, 0xfd, 0x2f, 0x16, 0x72, 0x46, 0x65, 0x99, 0x55,
	0xef, 0x69, 0x52, 0x2c, 0x4a, 0xd3, 0xef, 0xb9, 0x66, 0x8a, 0xf6, 0xd2, 0x2a, 0x0a, 0x09, 0x96,
	0x58, 0xab, 0xda, 0xc3, 0xc7, 0x7f, 0x77, 0xaa, 0x42, 0xf1, 0x5e, 0x57, 0xd1, 0x14, 0x4b, 0xbc,
	0x91, 0x6d, 0x7a, 0x6d, 0xa6, 0xa6, 0x6a, 0x8f, 0xd0, 0x1e, 0x87, 0x08, 0xe8, 0x47, 0xe0, 0xfa,
	0x6c, 0xda, 0xc3, 0xee, 0xb5, 0x69, 0x1b, 0xda, 0x66, 0x85, 0x0b, 0x59, 0xff, 0xab, 0x85, 0xee,
	0x6b, 0x97, 0x01, 0xf0, 0x18, 0x38, 0xc7, 0xd9, 0xff, 0x30, 0x3a, 0x41, 0xad, 0xf3, 0x1d, 0xd5,
	0x5f, 0x54, 0xff, 0x77, 0xa7, 0x97, 0x3a, 0x65, 0xf5, 0xa1, 0xb6, 0x3a, 0x8a, 0x63, 0x9a, 0x51,
	0xac, 0x4e, 0xff, 0x86, 0xa6, 0xfa, 0xcd, 0x42, 0x0f, 0xb4, 0xd5, 0xb7, 0xec, 0x0d, 0x13, 0x62,
	0x0c, 0x52, 0xdc, 0x4c, 0xa7, 0xea, 0x7a, 0xcf, 0x41, 0x86, 0x0b, 0x4a, 0xd4, 0x2d, 0xae, 0x0f,
	0x5a, 0x41, 0x73, 0x0e, 0xf2, 0x88, 0x12, 0x31, 0x9e, 0x9c, 0xae, 0x5c, 0xeb, 0x6c, 0xe5, 0x5a,
	0xbf, 0x56, 0xae, 0xf5, 0x79, 0xed, 0xd6, 0xce, 0xd6, 0x6e, 0xed, 0xc7, 0xda, 0xad, 0x7d, 0x78,
	0x9a, 0x50, 0x79, 0xbc, 0x98, 0x7b, 0x11, 0xcb, 0x7d, 0x91, 0xc0, 0xb3, 0xcd, 0x86, 0x6a, 0xec,
	0x7f, 0xba, 0x78, 0xe0, 0xaa, 0x12, 0xc4, 0x7c, 0x57, 0x3f, 0x43, 0x87, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x36, 0xcf, 0x9a, 0x54, 0xfb, 0x04, 0x00, 0x00,
}

func (m *CreateCampaignPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateCampaignPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateCampaignPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.PoolAmount.Size()
		i -= size
		if _, err := m.PoolAmount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if len(m.RewardDefs) > 0 {
		for iNdEx := len(m.RewardDefs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RewardDefs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTicket(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.Type != 0 {
		i = encodeVarintTicket(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x20
	}
	if m.EndTs != 0 {
		i = encodeVarintTicket(dAtA, i, uint64(m.EndTs))
		i--
		dAtA[i] = 0x18
	}
	if m.StartTs != 0 {
		i = encodeVarintTicket(dAtA, i, uint64(m.StartTs))
		i--
		dAtA[i] = 0x10
	}
	if len(m.FunderAddress) > 0 {
		i -= len(m.FunderAddress)
		copy(dAtA[i:], m.FunderAddress)
		i = encodeVarintTicket(dAtA, i, uint64(len(m.FunderAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UpdateCampaignPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateCampaignPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateCampaignPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EndTs != 0 {
		i = encodeVarintTicket(dAtA, i, uint64(m.EndTs))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ApplySignupRewardPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplySignupRewardPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplySignupRewardPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Receiver.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.KycData.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ApplyRerferralRewardPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyRerferralRewardPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyRerferralRewardPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receivers) > 0 {
		for iNdEx := len(m.Receivers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Receivers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTicket(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.KycData.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ApplyAffiliationRewardPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyAffiliationRewardPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyAffiliationRewardPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Receiver.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.KycData.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ApplyNoLossBetsRewardPayload) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyNoLossBetsRewardPayload) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyNoLossBetsRewardPayload) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BetUids) > 0 {
		for iNdEx := len(m.BetUids) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.BetUids[iNdEx])
			copy(dAtA[i:], m.BetUids[iNdEx])
			i = encodeVarintTicket(dAtA, i, uint64(len(m.BetUids[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	{
		size, err := m.Receiver.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.KycData.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTicket(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintTicket(dAtA []byte, offset int, v uint64) int {
	offset -= sovTicket(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateCampaignPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FunderAddress)
	if l > 0 {
		n += 1 + l + sovTicket(uint64(l))
	}
	if m.StartTs != 0 {
		n += 1 + sovTicket(uint64(m.StartTs))
	}
	if m.EndTs != 0 {
		n += 1 + sovTicket(uint64(m.EndTs))
	}
	if m.Type != 0 {
		n += 1 + sovTicket(uint64(m.Type))
	}
	if len(m.RewardDefs) > 0 {
		for _, e := range m.RewardDefs {
			l = e.Size()
			n += 1 + l + sovTicket(uint64(l))
		}
	}
	l = m.PoolAmount.Size()
	n += 1 + l + sovTicket(uint64(l))
	return n
}

func (m *UpdateCampaignPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EndTs != 0 {
		n += 1 + sovTicket(uint64(m.EndTs))
	}
	return n
}

func (m *ApplySignupRewardPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.KycData.Size()
	n += 1 + l + sovTicket(uint64(l))
	l = m.Receiver.Size()
	n += 1 + l + sovTicket(uint64(l))
	return n
}

func (m *ApplyRerferralRewardPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.KycData.Size()
	n += 1 + l + sovTicket(uint64(l))
	if len(m.Receivers) > 0 {
		for _, e := range m.Receivers {
			l = e.Size()
			n += 1 + l + sovTicket(uint64(l))
		}
	}
	return n
}

func (m *ApplyAffiliationRewardPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.KycData.Size()
	n += 1 + l + sovTicket(uint64(l))
	l = m.Receiver.Size()
	n += 1 + l + sovTicket(uint64(l))
	return n
}

func (m *ApplyNoLossBetsRewardPayload) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.KycData.Size()
	n += 1 + l + sovTicket(uint64(l))
	l = m.Receiver.Size()
	n += 1 + l + sovTicket(uint64(l))
	if len(m.BetUids) > 0 {
		for _, s := range m.BetUids {
			l = len(s)
			n += 1 + l + sovTicket(uint64(l))
		}
	}
	return n
}

func sovTicket(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTicket(x uint64) (n int) {
	return sovTicket(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateCampaignPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateCampaignPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateCampaignPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FunderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FunderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTs", wireType)
			}
			m.StartTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartTs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTs", wireType)
			}
			m.EndTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= RewardType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RewardDefs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RewardDefs = append(m.RewardDefs, Definition{})
			if err := m.RewardDefs[len(m.RewardDefs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PoolAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PoolAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTicket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTicket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateCampaignPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateCampaignPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateCampaignPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTs", wireType)
			}
			m.EndTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTicket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTicket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplySignupRewardPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplySignupRewardPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplySignupRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KycData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.KycData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Receiver.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTicket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTicket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyRerferralRewardPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyRerferralRewardPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyRerferralRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KycData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.KycData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receivers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receivers = append(m.Receivers, Receiver{})
			if err := m.Receivers[len(m.Receivers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTicket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTicket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyAffiliationRewardPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyAffiliationRewardPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyAffiliationRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KycData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.KycData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Receiver.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTicket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTicket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyNoLossBetsRewardPayload) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyNoLossBetsRewardPayload: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyNoLossBetsRewardPayload: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KycData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.KycData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Receiver.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BetUids", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTicket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTicket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BetUids = append(m.BetUids, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTicket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTicket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTicket(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTicket
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTicket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTicket
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTicket
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTicket
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTicket        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTicket          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTicket = fmt.Errorf("proto: unexpected end of group")
)
